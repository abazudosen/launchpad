// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Main Heaaer render others 1`] = `
<div
  className="Header"
>
  <div
    className="Header-Left"
  >
    <HeaderLogo />
    <div
      className="Management-Buttons"
    >
      <HeaderButton
        onClick={[Function]}
      >
        New
      </HeaderButton>
      <HeaderButton
        disabled={undefined}
        onClick={undefined}
        tooltip="You can't save pads you don't own"
      >
        Save
      </HeaderButton>
      <HeaderButton
        disabled={false}
        onClick={[Function]}
        tooltip={undefined}
      >
        Download
      </HeaderButton>
      <HeaderButton
        disabled={false}
        onClick={[Function]}
        tooltip={undefined}
      >
        Fork
      </HeaderButton>
    </div>
    <TitleEditor
      canEdit={false}
      githubUsername="some-new-username"
      onSetTitle={[Function]}
      title="Fake 1"
    />
    <EngineConnector
      currentContext={Array []}
      engineClient={Object {}}
      onContextChange={[Function]}
      pad={
        Object {
          "code": "code",
          "context": Array [
            Object {
              "key": "secret",
              "value": "secret",
            },
          ],
          "defaultQuery": "{ hello }",
          "defaultVariables": null,
          "dependencies": Array [
            Object {
              "name": "graphql-js",
              "version": "0.8.9",
            },
          ],
          "deployedCode": "deployed code",
          "description": "Description 1",
          "draft": null,
          "id": "fakeid1",
          "isDeployed": true,
          "isDraft": false,
          "title": "Fake 1",
          "token": "test-token-2",
          "url": "http://example.com",
          "user": Object {
            "githubUsername": "some-new-username",
            "id": "some-new-id",
            "pads": Array [],
          },
        }
      }
      user={
        Object {
          "githubUsername": "example",
          "id": "test-ids",
          "pads": Array [],
        }
      }
    />
  </div>
  <div
    className="Header-Gap"
  />
  <div
    className="Header-Right"
  >
    <UserBar
      onLogin={[Function]}
      onLogout={[Function]}
      user={
        Object {
          "githubUsername": "example",
          "id": "test-ids",
          "pads": Array [],
        }
      }
    />
  </div>
</div>
`;

exports[`Main Heaaer renders anon existing 1`] = `
<div
  className="Header"
>
  <div
    className="Header-Left"
  >
    <HeaderLogo />
    <div
      className="Management-Buttons"
    >
      <HeaderButton
        onClick={[Function]}
      >
        New
      </HeaderButton>
      <HeaderButton
        disabled={true}
        onClick={undefined}
        tooltip="You need to login to save"
      >
        Save
      </HeaderButton>
      <HeaderButton
        disabled={false}
        onClick={[Function]}
        tooltip={undefined}
      >
        Download
      </HeaderButton>
      <HeaderButton
        disabled={true}
        onClick={undefined}
        tooltip="You need to login to fork"
      >
        Fork
      </HeaderButton>
    </div>
    <TitleEditor
      canEdit={false}
      githubUsername="example"
      onSetTitle={[Function]}
      title="Fake 1"
    />
    <EngineConnector
      currentContext={Array []}
      engineClient={Object {}}
      onContextChange={[Function]}
      pad={
        Object {
          "code": "code",
          "context": Array [
            Object {
              "key": "secret",
              "value": "secret",
            },
          ],
          "defaultQuery": "{ hello }",
          "defaultVariables": null,
          "dependencies": Array [
            Object {
              "name": "graphql-js",
              "version": "0.8.9",
            },
          ],
          "deployedCode": "deployed code",
          "description": "Description 1",
          "draft": null,
          "id": "fakeid1",
          "isDeployed": true,
          "isDraft": false,
          "title": "Fake 1",
          "token": "test-token-2",
          "url": "http://example.com",
          "user": Object {
            "githubUsername": "example",
            "id": "test-ids",
            "pads": Array [],
          },
        }
      }
      user={null}
    />
  </div>
  <div
    className="Header-Gap"
  />
  <div
    className="Header-Right"
  >
    <UserBar
      onLogin={[Function]}
      onLogout={[Function]}
      user={null}
    />
  </div>
</div>
`;

exports[`Main Heaaer renders anon new 1`] = `
<div
  className="Header"
>
  <div
    className="Header-Left"
  >
    <HeaderLogo />
    <div
      className="Management-Buttons"
    >
      <HeaderButton
        onClick={[Function]}
      >
        New
      </HeaderButton>
      <HeaderButton
        disabled={true}
        onClick={undefined}
        tooltip="You need to login to save"
      >
        Save
      </HeaderButton>
      <HeaderButton
        disabled={true}
        onClick={undefined}
        tooltip="Save this pad to download it"
      >
        Download
      </HeaderButton>
      <HeaderButton
        disabled={true}
        onClick={undefined}
        tooltip="You need to login to fork"
      >
        Fork
      </HeaderButton>
    </div>
    <TitleEditor
      canEdit={true}
      githubUsername={null}
      onSetTitle={[Function]}
      title="Fake 1"
    />
    <EngineConnector
      currentContext={Array []}
      engineClient={Object {}}
      onContextChange={[Function]}
      pad={
        Object {
          "code": "code",
          "context": Array [
            Object {
              "key": "secret",
              "value": "secret",
            },
          ],
          "defaultQuery": "{ hello }",
          "defaultVariables": null,
          "dependencies": Array [
            Object {
              "name": "graphql-js",
              "version": "0.8.9",
            },
          ],
          "deployedCode": "deployed code",
          "description": "Description 1",
          "draft": null,
          "id": "fakeid1",
          "isDeployed": false,
          "isDraft": false,
          "title": "Fake 1",
          "token": "test-token-2",
          "url": "http://example.com",
          "user": null,
        }
      }
      user={null}
    />
  </div>
  <div
    className="Header-Gap"
  />
  <div
    className="Header-Right"
  >
    <UserBar
      onLogin={[Function]}
      onLogout={[Function]}
      user={null}
    />
  </div>
</div>
`;

exports[`Main Heaaer renders deploying 1`] = `
<div
  className="Header"
>
  <div
    className="Header-Left"
  >
    <HeaderLogo />
    <div
      className="Management-Buttons"
    >
      <HeaderButton
        onClick={[Function]}
      >
        New
      </HeaderButton>
      <HeaderButton
        disabled={false}
        onClick={[Function]}
        tooltip={undefined}
      >
        Save
      </HeaderButton>
      <HeaderButton
        disabled={true}
        onClick={undefined}
        tooltip={undefined}
      >
        Download
      </HeaderButton>
      <HeaderButton
        disabled={true}
        onClick={undefined}
        tooltip={undefined}
      >
        Fork
      </HeaderButton>
    </div>
    <TitleEditor
      canEdit={true}
      githubUsername="example"
      onSetTitle={[Function]}
      title="Fake 1"
    />
    <EngineConnector
      currentContext={Array []}
      engineClient={Object {}}
      onContextChange={[Function]}
      pad={
        Object {
          "code": "code",
          "context": Array [
            Object {
              "key": "secret",
              "value": "secret",
            },
          ],
          "defaultQuery": "{ hello }",
          "defaultVariables": null,
          "dependencies": Array [
            Object {
              "name": "graphql-js",
              "version": "0.8.9",
            },
          ],
          "deployedCode": "deployed code",
          "description": "Description 1",
          "draft": null,
          "id": "fakeid1",
          "isDeployed": true,
          "isDraft": true,
          "title": "Fake 1",
          "token": "test-token-2",
          "url": "http://example.com",
          "user": Object {
            "githubUsername": "example",
            "id": "test-ids",
            "pads": Array [],
          },
        }
      }
      user={
        Object {
          "githubUsername": "example",
          "id": "test-ids",
          "pads": Array [],
        }
      }
    />
  </div>
  <div
    className="Header-Gap"
  />
  <div
    className="Header-Right"
  >
    <UserBar
      onLogin={[Function]}
      onLogout={[Function]}
      user={
        Object {
          "githubUsername": "example",
          "id": "test-ids",
          "pads": Array [],
        }
      }
    />
  </div>
</div>
`;

exports[`Main Heaaer renders draft 1`] = `
<div
  className="Header"
>
  <div
    className="Header-Left"
  >
    <HeaderLogo />
    <div
      className="Management-Buttons"
    >
      <HeaderButton
        onClick={[Function]}
      >
        New
      </HeaderButton>
      <HeaderButton
        disabled={false}
        onClick={[Function]}
        tooltip={undefined}
      >
        Save
      </HeaderButton>
      <HeaderButton
        disabled={true}
        onClick={[Function]}
        tooltip="Save this pad to download it"
      >
        Download
      </HeaderButton>
      <HeaderButton
        disabled={false}
        onClick={[Function]}
        tooltip={undefined}
      >
        Fork
      </HeaderButton>
    </div>
    <TitleEditor
      canEdit={true}
      githubUsername="example"
      onSetTitle={[Function]}
      title="Fake 1"
    />
    <EngineConnector
      currentContext={Array []}
      engineClient={Object {}}
      onContextChange={[Function]}
      pad={
        Object {
          "code": "code",
          "context": Array [
            Object {
              "key": "secret",
              "value": "secret",
            },
          ],
          "defaultQuery": "{ hello }",
          "defaultVariables": null,
          "dependencies": Array [
            Object {
              "name": "graphql-js",
              "version": "0.8.9",
            },
          ],
          "deployedCode": "deployed code",
          "description": "Description 1",
          "draft": null,
          "id": "fakeid1",
          "isDeployed": true,
          "isDraft": true,
          "title": "Fake 1",
          "token": "test-token-2",
          "url": "http://example.com",
          "user": Object {
            "githubUsername": "example",
            "id": "test-ids",
            "pads": Array [],
          },
        }
      }
      user={
        Object {
          "githubUsername": "example",
          "id": "test-ids",
          "pads": Array [],
        }
      }
    />
  </div>
  <div
    className="Header-Gap"
  />
  <div
    className="Header-Right"
  >
    <UserBar
      onLogin={[Function]}
      onLogout={[Function]}
      user={
        Object {
          "githubUsername": "example",
          "id": "test-ids",
          "pads": Array [],
        }
      }
    />
  </div>
</div>
`;

exports[`Main Heaaer renders own 1`] = `
<div
  className="Header"
>
  <div
    className="Header-Left"
  >
    <HeaderLogo />
    <div
      className="Management-Buttons"
    >
      <HeaderButton
        onClick={[Function]}
      >
        New
      </HeaderButton>
      <HeaderButton
        disabled={true}
        onClick={undefined}
        tooltip="Already up to date"
      >
        Save
      </HeaderButton>
      <HeaderButton
        disabled={false}
        onClick={[Function]}
        tooltip={undefined}
      >
        Download
      </HeaderButton>
      <HeaderButton
        disabled={false}
        onClick={[Function]}
        tooltip={undefined}
      >
        Fork
      </HeaderButton>
    </div>
    <TitleEditor
      canEdit={true}
      githubUsername="example"
      onSetTitle={[Function]}
      title="Fake 1"
    />
    <EngineConnector
      currentContext={Array []}
      engineClient={Object {}}
      onContextChange={[Function]}
      pad={
        Object {
          "code": "code",
          "context": Array [
            Object {
              "key": "secret",
              "value": "secret",
            },
          ],
          "defaultQuery": "{ hello }",
          "defaultVariables": null,
          "dependencies": Array [
            Object {
              "name": "graphql-js",
              "version": "0.8.9",
            },
          ],
          "deployedCode": "deployed code",
          "description": "Description 1",
          "draft": null,
          "id": "fakeid1",
          "isDeployed": true,
          "isDraft": false,
          "title": "Fake 1",
          "token": "test-token-2",
          "url": "http://example.com",
          "user": Object {
            "githubUsername": "example",
            "id": "test-ids",
            "pads": Array [],
          },
        }
      }
      user={
        Object {
          "githubUsername": "example",
          "id": "test-ids",
          "pads": Array [],
        }
      }
    />
  </div>
  <div
    className="Header-Gap"
  />
  <div
    className="Header-Right"
  >
    <UserBar
      onLogin={[Function]}
      onLogout={[Function]}
      user={
        Object {
          "githubUsername": "example",
          "id": "test-ids",
          "pads": Array [],
        }
      }
    />
  </div>
</div>
`;

exports[`Main Heaaer renders undeployed 1`] = `
<div
  className="Header"
>
  <div
    className="Header-Left"
  >
    <HeaderLogo />
    <div
      className="Management-Buttons"
    >
      <HeaderButton
        onClick={[Function]}
      >
        New
      </HeaderButton>
      <HeaderButton
        disabled={true}
        onClick={undefined}
        tooltip="Already up to date"
      >
        Save
      </HeaderButton>
      <HeaderButton
        disabled={true}
        onClick={undefined}
        tooltip="Save this pad to download it"
      >
        Download
      </HeaderButton>
      <HeaderButton
        disabled={true}
        onClick={undefined}
        tooltip="This pad is not saved yet"
      >
        Fork
      </HeaderButton>
    </div>
    <TitleEditor
      canEdit={true}
      githubUsername="example"
      onSetTitle={[Function]}
      title="Fake 1"
    />
    <EngineConnector
      currentContext={Array []}
      engineClient={Object {}}
      onContextChange={[Function]}
      pad={
        Object {
          "code": "code",
          "context": Array [
            Object {
              "key": "secret",
              "value": "secret",
            },
          ],
          "defaultQuery": "{ hello }",
          "defaultVariables": null,
          "dependencies": Array [
            Object {
              "name": "graphql-js",
              "version": "0.8.9",
            },
          ],
          "deployedCode": "deployed code",
          "description": "Description 1",
          "draft": null,
          "id": "fakeid1",
          "isDeployed": false,
          "isDraft": false,
          "title": "Fake 1",
          "token": "test-token-2",
          "url": "http://example.com",
          "user": Object {
            "githubUsername": "example",
            "id": "test-ids",
            "pads": Array [],
          },
        }
      }
      user={
        Object {
          "githubUsername": "example",
          "id": "test-ids",
          "pads": Array [],
        }
      }
    />
  </div>
  <div
    className="Header-Gap"
  />
  <div
    className="Header-Right"
  >
    <UserBar
      onLogin={[Function]}
      onLogout={[Function]}
      user={
        Object {
          "githubUsername": "example",
          "id": "test-ids",
          "pads": Array [],
        }
      }
    />
  </div>
</div>
`;
