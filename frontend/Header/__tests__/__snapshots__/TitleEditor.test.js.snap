// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Title Editor interaction 1`] = `
<TitleEditor
  canEdit={true}
  githubUsername="example"
  onSetTitle={[MockFunction]}
  title="test"
>
  <div
    className="Title-Editor"
  >
    <HelmetWrapper
      defer={true}
      encodeSpecialCharacters={true}
    >
      <SideEffect(NullComponent)
        defer={true}
        encodeSpecialCharacters={true}
        meta={
          Array [
            Object {
              "content": "test",
              "name": "twitter:title",
            },
            Object {
              "content": "test",
              "property": "og:title",
            },
          ]
        }
      >
        <NullComponent
          defer={true}
          encodeSpecialCharacters={true}
          meta={
            Array [
              Object {
                "content": "test",
                "name": "twitter:title",
              },
              Object {
                "content": "test",
                "property": "og:title",
              },
            ]
          }
        />
      </SideEffect(NullComponent)>
    </HelmetWrapper>
    <div
      aria-label="Edit Title and Description"
      className="edit-title-button"
    >
      <span
        className="icon-edit"
      />
    </div>
    <input
      className="TitleInput"
      onBlur={[Function]}
      onChange={[Function]}
      onKeyPress={[Function]}
      placeholder="Untitled"
      type="text"
      value="test"
    />
  </div>
</TitleEditor>
`;

exports[`Title Editor interaction 2`] = `
<TitleEditor
  canEdit={true}
  githubUsername="example"
  onSetTitle={[MockFunction]}
  title="test"
>
  <div
    className="Title-Editor"
  >
    <HelmetWrapper
      defer={true}
      encodeSpecialCharacters={true}
    >
      <SideEffect(NullComponent)
        defer={true}
        encodeSpecialCharacters={true}
        meta={
          Array [
            Object {
              "content": "New test",
              "name": "twitter:title",
            },
            Object {
              "content": "New test",
              "property": "og:title",
            },
          ]
        }
      >
        <NullComponent
          defer={true}
          encodeSpecialCharacters={true}
          meta={
            Array [
              Object {
                "content": "New test",
                "name": "twitter:title",
              },
              Object {
                "content": "New test",
                "property": "og:title",
              },
            ]
          }
        />
      </SideEffect(NullComponent)>
    </HelmetWrapper>
    <div
      aria-label="Edit Title and Description"
      className="edit-title-button"
    >
      <span
        className="icon-edit"
      />
    </div>
    <input
      className="TitleInput"
      onBlur={[Function]}
      onChange={[Function]}
      onKeyPress={[Function]}
      placeholder="Untitled"
      type="text"
      value="New test"
    />
  </div>
</TitleEditor>
`;

exports[`Title Editor interaction 3`] = `
<TitleEditor
  canEdit={true}
  githubUsername="example"
  onSetTitle={
    [MockFunction] {
      "calls": Array [
        Array [
          "New test",
        ],
      ],
    }
  }
  title="test"
>
  <div
    className="Title-Editor"
  >
    <HelmetWrapper
      defer={true}
      encodeSpecialCharacters={true}
    >
      <SideEffect(NullComponent)
        defer={true}
        encodeSpecialCharacters={true}
        meta={
          Array [
            Object {
              "content": "New test 2",
              "name": "twitter:title",
            },
            Object {
              "content": "New test 2",
              "property": "og:title",
            },
          ]
        }
      >
        <NullComponent
          defer={true}
          encodeSpecialCharacters={true}
          meta={
            Array [
              Object {
                "content": "New test 2",
                "name": "twitter:title",
              },
              Object {
                "content": "New test 2",
                "property": "og:title",
              },
            ]
          }
        />
      </SideEffect(NullComponent)>
    </HelmetWrapper>
    <div
      aria-label="Edit Title and Description"
      className="edit-title-button"
    >
      <span
        className="icon-edit"
      />
    </div>
    <input
      className="TitleInput"
      onBlur={[Function]}
      onChange={[Function]}
      onKeyPress={[Function]}
      placeholder="Untitled"
      type="text"
      value="New test 2"
    />
  </div>
</TitleEditor>
`;

exports[`Title Editor render normal 1`] = `
<div
  className="Title-Editor"
>
  <div
    aria-label="Edit Title and Description"
    className="edit-title-button"
  >
    <span
      className="icon-edit"
    />
  </div>
  <input
    className="TitleInput"
    onBlur={[Function]}
    onChange={[Function]}
    onKeyPress={[Function]}
    placeholder="Untitled"
    type="text"
    value="Test"
  />
</div>
`;

exports[`Title Editor render normal 2`] = `
<div
  className="Title"
>
  <div>
    Test
     
    <span>
      by
       
      <a
        href="https://github.com/example"
        target="_blank"
      >
        example
      </a>
    </span>
  </div>
</div>
`;

exports[`Title Editor render normal 3`] = `
<div
  className="Title-Editor"
>
  <div
    aria-label="Edit Title and Description"
    className="edit-title-button"
  >
    <span
      className="icon-edit"
    />
  </div>
  <input
    className="TitleInput"
    onBlur={[Function]}
    onChange={[Function]}
    onKeyPress={[Function]}
    placeholder="Untitled"
    type="text"
    value=""
  />
</div>
`;

exports[`Title Editor render normal 4`] = `
<div
  className="Title-Editor"
>
  <div
    aria-label="Edit Title and Description"
    className="edit-title-button"
  >
    <span
      className="icon-edit"
    />
  </div>
  <input
    className="TitleInput"
    onBlur={[Function]}
    onChange={[Function]}
    onKeyPress={[Function]}
    placeholder="Untitled"
    type="text"
    value=""
  />
</div>
`;
