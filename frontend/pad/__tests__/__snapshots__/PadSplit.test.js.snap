// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`render normally 1`] = `
<div
  className="PadSplit"
>
  <Header
    currentContext={
      Array [
        Object {
          "key": "test",
          "value": "testValue",
        },
      ]
    }
    engineClient={Object {}}
    isDeploying={false}
    onContextChange={[Function]}
    onDeploy={[Function]}
    onDownload={[Function]}
    onFork={[Function]}
    onLogin={[Function]}
    onLogout={[Function]}
    onReset={[Function]}
    onSetDescription={[Function]}
    onSetTitle={[Function]}
    pad={
      Object {
        "code": "code",
        "context": Array [
          Object {
            "key": "secret",
            "value": "secret",
          },
        ],
        "defaultQuery": "{ hello }",
        "defaultVariables": null,
        "dependencies": Array [
          Object {
            "name": "graphql-js",
            "version": "0.8.9",
          },
        ],
        "deployedCode": "deployed code",
        "description": "Description 1",
        "draft": null,
        "id": "fakeid1",
        "title": "Fake 1",
        "token": "test-token-2",
        "url": "http://example.com",
        "user": Object {
          "githubUsername": "example",
          "id": "test-ids",
          "pads": Array [],
        },
      }
    }
    user={
      Object {
        "githubUsername": "example",
        "id": "test-ids",
        "pads": Array [],
      }
    }
  />
  <div
    className="PadSplit-Main"
  >
    <div
      className="PadSplit-Editors"
    >
      <SplitPane
        allowResize={true}
        defaultSize="50%"
        minSize={50}
        prefixer={
          Prefixer {
            "_browserInfo": Object {
              "blink": true,
              "browserName": "safari",
              "browserVersion": NaN,
              "cssPrefix": "-webkit-",
              "jsPrefix": "Webkit",
              "linux": true,
              "name": "Safari",
              "osVersion": NaN,
              "safari": true,
              "x": true,
            },
            "_hasPropsRequiringPrefix": false,
            "_keepUnprefixed": false,
            "_metaData": Object {
              "browserName": "safari",
              "browserVersion": NaN,
              "cssPrefix": "-webkit-",
              "jsPrefix": "Webkit",
              "keepUnprefixed": false,
              "requiresPrefix": Object {},
            },
            "_requiresPrefix": Object {},
            "_userAgent": "Node.js (linux; U; rv:v6.11.2) AppleWebKit/537.36 (KHTML, like Gecko)",
            "prefixedKeyframes": "keyframes",
          }
        }
        primary="first"
        split="vertical"
      >
        <div
          className="PadSplit-Left"
        >
          <div
            className="PadSplit-EditorWrapper"
          >
            <Editor
              canEdit={true}
              code="test"
              onChange={[Function]}
            />
          </div>
          <div
            className="PadSplit-Logs"
          />
        </div>
        <div
          className="PadSplit-Right"
        >
          <GraphiQLWrapper
            isDeploying={false}
            onSetDefaultQuery={[Function]}
            pad={
              Object {
                "code": "code",
                "context": Array [
                  Object {
                    "key": "secret",
                    "value": "secret",
                  },
                ],
                "defaultQuery": "{ hello }",
                "defaultVariables": null,
                "dependencies": Array [
                  Object {
                    "name": "graphql-js",
                    "version": "0.8.9",
                  },
                ],
                "deployedCode": "deployed code",
                "description": "Description 1",
                "draft": null,
                "id": "fakeid1",
                "title": "Fake 1",
                "token": "test-token-2",
                "url": "http://example.com",
                "user": Object {
                  "githubUsername": "example",
                  "id": "test-ids",
                  "pads": Array [],
                },
              }
            }
            user={
              Object {
                "githubUsername": "example",
                "id": "test-ids",
                "pads": Array [],
              }
            }
          />
        </div>
      </SplitPane>
    </div>
  </div>
  <Footer
    canSeeLogs={true}
    error={null}
    isDeployed={undefined}
    isDraft={undefined}
    isLogOpen={false}
    onLogClose={[Function]}
    onLogOpen={[Function]}
    onModalOpen={[Function]}
    onResetLinkClick={[Function]}
    url="http://example.com"
  />
  <Modal
    isOpen={true}
    onRequestClose={[Function]}
    title="Welcome to Apollo Launchpad!"
  >
    <p>
      This is a tool you can use build, deploy, and share a simple GraphQL API right from your browser. We think it's a great way to experiment with GraphQL and share examples of different patterns.
    </p>
    <p>
      Visit the
       
      <a
        href="https://github.com/apollographql/awesome-launchpad"
        target="_blank"
      >
        awesome-launchpad repository
      </a>
       
      to see a list of examples and read the docs. For an introduction, read the
       
      <a
        href="https://dev-blog.apollodata.com/introducing-launchpad-the-graphql-server-demo-platform-cc4e7481fcba"
        target="_blank"
      >
        announcement blog post
      </a>
      .
    </p>
    <div
      className="welcome-modal-start-wrapper"
    >
      <button
        className="welcome-modal-start btn primary"
        onClick={[Function]}
      >
        Start using Launchpad
      </button>
    </div>
  </Modal>
  <Modal
    isOpen={false}
    onRequestClose={[Function]}
    title="Edit Server Secrets"
  >
    <ContextEditor
      context={
        Array [
          Object {
            "key": "test",
            "value": "testValue",
          },
        ]
      }
      onChange={[Function]}
    />
  </Modal>
  <Modal
    isOpen={false}
    onRequestClose={[Function]}
    title="npm Dependencies"
  >
    <Dependencies
      dependencies={
        Array [
          Object {
            "name": "graphql-js",
            "version": "0.8.9",
          },
        ]
      }
    />
  </Modal>
</div>
`;
